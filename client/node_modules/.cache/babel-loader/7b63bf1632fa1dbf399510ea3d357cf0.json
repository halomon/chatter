{"ast":null,"code":"var _jsxFileName = \"/Users/camintosh2/Projects/chatter/client/src/App.jsx\";\nimport React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst apiKey = 'j2x5emncg3gj';\nconst authToken = cookies.get(\"token\");\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('username'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n  }, authToken);\n}\n\nconst App = () => {\n  if (!authToken) return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      client: client,\n      theme: \"messaging dark\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelListContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/camintosh2/Projects/chatter/client/src/App.jsx"],"names":["React","useState","StreamChat","Chat","Cookies","ChannelListContainer","ChannelContainer","Auth","cookies","apiKey","authToken","get","client","getInstance","connectUser","id","name","fullName","image","hashedPassword","phoneNumber","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,IAAjD,QAA6D,cAA7D;AAEA,OAAO,sCAAP;AACA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AAEA,MAAMK,MAAM,GAAG,cAAf;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAlB;AAEA,MAAMC,MAAM,GAAGV,UAAU,CAACW,WAAX,CAAuBJ,MAAvB,CAAf;;AAEA,IAAGC,SAAH,EAAc;AACVE,EAAAA,MAAM,CAACE,WAAP,CAAmB;AACfC,IAAAA,EAAE,EAAEP,OAAO,CAACG,GAAR,CAAY,QAAZ,CADW;AAEfK,IAAAA,IAAI,EAAER,OAAO,CAACG,GAAR,CAAY,UAAZ,CAFS;AAGfM,IAAAA,QAAQ,EAAET,OAAO,CAACG,GAAR,CAAY,UAAZ,CAHK;AAIfO,IAAAA,KAAK,EAAEV,OAAO,CAACG,GAAR,CAAY,WAAZ,CAJQ;AAKfQ,IAAAA,cAAc,EAAEX,OAAO,CAACG,GAAR,CAAY,gBAAZ,CALD;AAMfS,IAAAA,WAAW,EAAEZ,OAAO,CAACG,GAAR,CAAY,aAAZ;AANE,GAAnB,EAOGD,SAPH;AAQH;;AAED,MAAMW,GAAG,GAAG,MAAM;AAEd,MAAG,CAACX,SAAJ,EAAe,oBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEE,MAAd;AAAsB,MAAA,KAAK,EAAC,gBAA5B;AAAA,8BACI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhBD;;KAAMS,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\n\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\n\nconst cookies = new Cookies();\n\nconst apiKey = 'j2x5emncg3gj';\nconst authToken = cookies.get(\"token\");\n\nconst client = StreamChat.getInstance(apiKey);\n\nif(authToken) {\n    client.connectUser({\n        id: cookies.get('userId'),\n        name: cookies.get('username'),\n        fullName: cookies.get('fullName'),\n        image: cookies.get('avatarURL'),\n        hashedPassword: cookies.get('hashedPassword'),\n        phoneNumber: cookies.get('phoneNumber'),\n    }, authToken)\n}\n\nconst App = () => {\n\n    if(!authToken) return <Auth />\n\n    return (\n        <div className=\"app__wrapper\">\n            <Chat client={client} theme=\"messaging dark\">\n                <ChannelListContainer\n\n                />\n                <ChannelContainer\n\n                />\n            </Chat>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}