{"ast":null,"code":"var _jsxFileName = \"/Users/camintosh2/Projects/chatter/client/src/components/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = UserItem;\n\nconst UserList = () => {\n  _s();\n\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpety] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpety(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__message\",\n      children: \"Loading users ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"xVifPMbjAurL16B/SQU0xGtmcAo=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["/Users/camintosh2/Projects/chatter/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","InviteIcon","ListContainer","children","UserItem","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpety","getUsers","response","queryUsers","id","$ne","userID","limit","length","error","console","log","map","user","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,mBAAvC;AAEA,SAASC,UAAT,QAA2B,WAA3B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKA,QALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMD,a;;AAYN,MAAME,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;MAAMA,Q;;AAUN,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAaN,cAAc,EAAjC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,SAAD,EAAYC,aAAZ,IAA6Bd,QAAQ,CAAC,KAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,QAAQ,GAAG,YAAY;AACzB,UAAGJ,OAAH,EAAY;AAEZC,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACA,cAAMI,QAAQ,GAAG,MAAMR,MAAM,CAACS,UAAP,CACnB;AAAEC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,GAAG,EAAEX,MAAM,CAACY;AAAd;AAAN,SADmB,EAEnB;AAAEF,UAAAA,EAAE,EAAE;AAAN,SAFmB,EAGnB;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAHmB,CAAvB;;AAMA,YAAGL,QAAQ,CAACP,KAAT,CAAea,MAAlB,EAA0B;AACtBZ,UAAAA,QAAQ,CAACM,QAAQ,CAACP,KAAV,CAAR;AACH,SAFD,MAEO;AACHK,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,OAZD,CAYI,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KArBD;;AAuBA,QAAGJ,MAAH,EAAWO,QAAQ;AACtB,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACI,QAAC,aAAD;AAAA,cACKJ,OAAO,gBAAG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAGJF,KAHI,aAGJA,KAHI,uBAGJA,KAAK,CAAEiB,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,CAAjB;AAAkC,MAAA,IAAI,EAAED;AAAxC,OAAyBA,IAAI,CAACT,EAA9B;AAAA;AAAA;AAAA;AAAA,YADJ;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7CD;;GAAMX,Q;UACiBL,c;;;MADjBK,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport { InviteIcon } from '../assets';\n\nconst ListContainer = ({ children }) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\">\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = () => {\n    return (\n        <div className=\"user-item__wrapper\">\n            <div className=\"user-item__name-wrapper\">\n                <Avatar />\n            </div>\n        </div>\n    )\n}\n\nconst UserList = () => {\n    const { client } = useChatContext();\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [listEmpty, setListEmpety] = useState(false);\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if(loading) return;\n\n            setLoading(true);\n\n            try {\n                const response = await client.queryUsers(\n                    { id: { $ne: client.userID }},\n                    { id: 1 },\n                    { limit: 8 }\n                );\n\n                if(response.users.length) {\n                    setUsers(response.users);\n                } else {\n                    setListEmpety(true);\n                }\n            }   catch (error) {\n                console.log(error);\n            }\n            setLoading(false);\n        }\n\n        if(client) getUsers()\n    }, []) \n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading users ...\n            </div> : (\n                users?.map((user, i) => (\n                    <UserItem index={i} key={user.id} user={user}/>\n                ))\n            )}\n        </ ListContainer>\n    )\n    \n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}