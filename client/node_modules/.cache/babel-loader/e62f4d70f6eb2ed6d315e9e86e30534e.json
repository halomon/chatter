{"ast":null,"code":"var _jsxFileName = \"/Users/camintosh2/Projects/chatter/client/src/components/UserList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = ({\n  user\n}) => {\n  _s();\n\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    setSelected(prevSelected => !prevSelected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    onClick: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.image,\n        name: user.fullName || user.id,\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-item__name\",\n        children: user.name || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), selected ? /*#__PURE__*/_jsxDEV(InviteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__invite-empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserItem, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c2 = UserItem;\n\nconst UserList = () => {\n  _s2();\n\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__message\",\n      children: \"Loading users ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserList, \"qZ+Y4CncCC1b0UwY5VzicOXNzeM=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["/Users/camintosh2/Projects/chatter/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","InviteIcon","ListContainer","children","UserItem","user","selected","setSelected","handleSelect","prevSelected","image","fullName","id","name","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","getUsers","response","queryUsers","$ne","userID","limit","length","error","console","log","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport { InviteIcon } from '../assets';\n\nconst ListContainer = ({ children }) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\">\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = ({ user }) => {\n    const [selected, setSelected] = useState(false);\n\n    const handleSelect = () => {\n        setSelected((prevSelected) => !prevSelected);\n    }\n\n    return (\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\n            <div className=\"user-item__name-wrapper\">\n                <Avatar image={user.image} name={user.fullName || user.id} size={32}/>\n                <p className=\"user-item__name\">{user.name || user.id}</p>\n            </div>\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\n        </div> \n    )\n}\n\nconst UserList = () => {\n    const { client } = useChatContext();\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [listEmpty, setListEmpty] = useState(false);\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if(loading) return;\n\n            setLoading(true);\n\n            try {\n                const response = await client.queryUsers(\n                    { id: { $ne: client.userID }},\n                    { id: 1 },\n                    { limit: 8 }\n                );\n\n                if(response.users.length) {\n                    setUsers(response.users);\n                } else {\n                    setListEmpty(true);\n                }\n            }   catch (error) {\n                console.log(error);\n            }\n            setLoading(false);\n        }\n\n        if(client) getUsers()\n    }, []) \n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading users ...\n            </div> : (\n                users?.map((user, i) => (\n                    <UserItem index={i} key={user.id} user={user}/>\n                ))\n            )}\n        </ ListContainer>\n    )\n    \n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}