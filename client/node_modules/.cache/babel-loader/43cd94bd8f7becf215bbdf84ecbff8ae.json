{"ast":null,"code":"var _jsxFileName = \"/Users/camintosh2/Projects/chatter/client/src/components/CreateChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\nimport { useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = ({\n  channelName = '',\n  setChannelName\n}) => {\n  const handleChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-name-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Channel Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: handleChange,\n      placeholder: \"#channel-name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChannelNameInput;\n\nconst CreateChannel = ({\n  createType,\n  setIsCreating\n}) => {\n  _s();\n\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n  const [channelName, setChannelName] = useState('');\n\n  const CreateChannel = async e => {\n    e.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName,\n        members: selectedUsers\n      });\n      await newChannel.watch();\n      setChannelName('');\n      setIsCreating(false);\n      setSelectedUsers([client.userID]);\n      setActiveChannel(newChannel);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-channel__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-channel__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: createType === 'team' ? 'Start a New Channel' : 'Send a Direct Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CloseCreateChannel, {\n          setIsCreating: setIsCreating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), createType === 'team' && /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n        channelName: channelName,\n        setChannelName: setChannelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        setSelectedUsers: setSelectedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-channel__button-wrapper\",\n        onClick: CreateChannel,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: createType === 'team' ? 'Create Channel' : 'Create Message Group '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateChannel, \"YqNrJwo/HDjErbWWSZsQohRLCDU=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = CreateChannel;\nexport default CreateChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"CreateChannel\");","map":{"version":3,"sources":["/Users/camintosh2/Projects/chatter/client/src/components/CreateChannel.jsx"],"names":["React","useState","UserList","CloseCreateChannel","useChatContext","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","selectedUsers","setSelectedUsers","userID","e","newChannel","channel","name","members","watch","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nimport { useChatContext } from 'stream-chat-react';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Channel Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"#channel-name\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nconst CreateChannel = ({ createType, setIsCreating }) => {\n    const { client, setActiveChannel } = useChatContext();\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\n    const [channelName, setChannelName] = useState('');\n\n    const CreateChannel = async (e) => {\n        e.preventDefault();\n\n        try {\n            const newChannel = await client.channel(createType, channelName, {\n                name: channelName, members: selectedUsers\n            });\n\n            await newChannel.watch();\n\n            setChannelName('');\n            setIsCreating(false);\n            setSelectedUsers([client.userID]);\n            setActiveChannel(newChannel);\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"create-channel__container\">\n                <div className=\"create-channel__header\">\n                    <p>{createType === 'team' ? 'Start a New Channel' : 'Send a Direct Message'}</p>\n                    <CloseCreateChannel setIsCreating={setIsCreating} />\n                </div>\n                {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n                <UserList setSelectedUsers={setSelectedUsers} />\n                <div className=\"create-channel__button-wrapper\" onClick={CreateChannel}>\n                    <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group '}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateChannel;\n"]},"metadata":{},"sourceType":"module"}