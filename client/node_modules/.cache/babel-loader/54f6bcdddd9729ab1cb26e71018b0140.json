{"ast":null,"code":"var _jsxFileName = \"/Users/camintosh2/Projects/chatter/client/src/components/EditChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from '/stream-chat-react';\nimport { userList } from './';\nimport { closeCreateChannel } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = ({\n  channelName = '',\n  setChannelName\n}) => {\n  const handleChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-name-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Channel Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: handleChange,\n      placeholder: \"#channel-name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChannelNameInput;\n\nconst EditChannel = setIsEditing => {\n  _s();\n\n  var _channel$data;\n\n  const {\n    channel\n  } = useChatContext();\n  const [channelName, setChannelName] = useState(channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-channel__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-channel__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Edit Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreateChannel, {\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setSelectedUsers: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-channel__button-wrapper\",\n      onClick: updateChannel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditChannel, \"Lr/FndMuJxtG7XhIrr7iOPaX4Ko=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = EditChannel;\nexport default EditChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"EditChannel\");","map":{"version":3,"sources":["/Users/camintosh2/Projects/chatter/client/src/components/EditChannel.jsx"],"names":["React","useState","useChatContext","userList","closeCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","EditChannel","setIsEditing","channel","data","name","selectedUsers","setSelectedUsers","updateChannel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,kBAAT,QAAmC,WAAnC;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG,EAAhB;AAAoBC,EAAAA;AAApB,CAAD,KAA0C;AAC/D,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAH,IAAAA,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,KAAK,EAAEN,WAAd;AAA2B,MAAA,QAAQ,EAAEE,YAArC;AAAmD,MAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAbD;;KAAMH,gB;;AAeN,MAAMQ,WAAW,GAAIC,YAAD,IAAkB;AAAA;;AAAA;;AAClC,QAAM;AAACC,IAAAA;AAAD,MAAab,cAAc,EAAjC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACc,OAAD,aAACA,OAAD,wCAACA,OAAO,CAAEC,IAAV,kDAAC,cAAeC,IAAhB,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,kBAAD;AAAoB,QAAA,YAAY,EAAEa;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,gBAAD;AAAkB,MAAA,WAAW,EAAER,WAA/B;AAA4C,MAAA,cAAc,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,QAAD;AAAU,MAAA,gBAAgB,EAAEY;AAA5B;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,OAAO,EAAEC,aAAvD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjBD;;GAAMP,W;UACiBX,c;;;MADjBW,W;AAmBN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useChatContext } from '/stream-chat-react';\n\nimport { userList } from './';\nimport { closeCreateChannel } from '../assets';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Channel Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"#channel-name\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nconst EditChannel = (setIsEditing) => {\n    const {channel } = useChatContext();\n    const [channelName, setChannelName] = useState(channel?.data?.name);\n    const [selectedUsers, setSelectedUsers] = useState([])\n    return (\n        <div className=\"edit-channel__container\">\n            <div className=\"edit-channel__header\">\n                <p>Edit Channel</p>\n                <CloseCreateChannel setIsEditing={setIsEditing} />\n            </div>\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\n            <UserList setSelectedUsers={setSelectedUsers} />\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\n                <p>Save Changes</p>\n            </div>\n        </div>\n    )\n}\n\nexport default EditChannel\n"]},"metadata":{},"sourceType":"module"}